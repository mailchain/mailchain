// Code generated by MockGen. DO NOT EDIT.
// Source: block.go

// Package clientstest is a generated GoMock package.
package clientstest

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockBlockByNumber is a mock of BlockByNumber interface
type MockBlockByNumber struct {
	ctrl     *gomock.Controller
	recorder *MockBlockByNumberMockRecorder
}

// MockBlockByNumberMockRecorder is the mock recorder for MockBlockByNumber
type MockBlockByNumberMockRecorder struct {
	mock *MockBlockByNumber
}

// NewMockBlockByNumber creates a new mock instance
func NewMockBlockByNumber(ctrl *gomock.Controller) *MockBlockByNumber {
	mock := &MockBlockByNumber{ctrl: ctrl}
	mock.recorder = &MockBlockByNumberMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockBlockByNumber) EXPECT() *MockBlockByNumberMockRecorder {
	return m.recorder
}

// Get mocks base method
func (m *MockBlockByNumber) Get(ctx context.Context, blockNo uint64) (interface{}, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", ctx, blockNo)
	ret0, _ := ret[0].(interface{})
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get
func (mr *MockBlockByNumberMockRecorder) Get(ctx, blockNo interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockBlockByNumber)(nil).Get), ctx, blockNo)
}
